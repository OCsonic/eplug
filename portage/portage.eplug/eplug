#!/bin/bash
infoDbg() { if [[ $PLUGMAN_LOG > "4" ]]; then einfo "${@}"; fi; }
export portageDir="${1%/*}/portage.eplug"
source "$portageDir/core/libraries/core"

import functions/logging	# infoLog and other info functions
import functions/plugins	# functions for the actual plugin-loading portion
import shield			# protects from accidentally running external commands in disallowed ebuild phases

# Start timing execution
if [ ! "${TIMER_START}" ]; then local TIMER_START="$(date +%s)"; fi

infoDbg "Loading plugins..."
readarray -t pluginLst < "${portageDir}/plugins.load"
for pluginCur in "${pluginLst[@]}"; do
	if [[ ! ${pluginCur:0:1} =~ ^(#|"")$ ]] ; then
		# If plugin exists then load it
		localvar pluginCurScr="${pluginDir}/${pluginCur}"
		if [ -f "${pluginCurScr}" ]; then
			infoDbg " Loading plugin ${pluginCur}..."
			source "${pluginCurScr}"
			if [ ! "${config_name}" ]; then eerror " plugin \"${pluginCur}\" is missing config_name" && die; fi
			if [ ! "${config_style}" ]; then eerror " plugin \"${pluginCur}\" is missing config_style" && die; fi
			case "${config_style}" in
				1) import format/pdotplug	;; # package.use style
				2) import format/pdotplugplug	;; # package.env + env style
				3) import format/plug		;; # patches style
				*) eerror " config style \"${config_style}\" is not valid!" && die ;;
			esac
			infoDbg "Plugin \"${pluginCur}\" loaded!"
		else
			eerror "Plugin \"${pluginCur}\" does not exist!" && die
		fi
		envcleaner --plugin
	fi
done
envcleaner --global

# Stop timing execution
if [ ! "${TIMER_STOP}" ]; then local TIMER_STOP="$(date +%s)"; fi
infoDbg "Plugin execution completed in $((${TIMER_STOP}-${TIMER_START})) seconds!"
envcleaner --finalize
